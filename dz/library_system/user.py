from typing import List
from book import Book  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø Book

class User:
    def __init__(self, name: str):
        self.name: str = name
        self.id: str = name.lower().replace(" ", "_")  # –ø—Ä–æ—Å—Ç–æ–π ID
        self.borrowed_books: List[Book] = []  # —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, –≤–∑—è—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    def borrow_book(self, book: Book) -> None:
        if book is None or not isinstance(book, Book):
            print("\n‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–¥–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ –∫–Ω–∏–≥–∏.")
            return
        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∑—è–ª 3 –∫–Ω–∏–≥–∏
        if len(self.borrowed_books) >= 3:
            print(f"\nüö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.name} –Ω–µ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –±–æ–ª—å—à–µ 3 –∫–Ω–∏–≥.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–Ω–∏–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
        if not book.is_available:
            print(f"\n‚ùå –ö–Ω–∏–≥–∞ '{book.title}' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.borrowed_books.append(book)
        book.is_available = False
        print(f"\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.name} –≤–∑—è–ª –∫–Ω–∏–≥—É '{book.title}'.")

        #–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–∏–≥—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    def return_book(self, book: Book) -> None:
        if book is None or not isinstance(book, Book):
            print("\n‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–¥–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ –∫–Ω–∏–≥–∏.")
            return
        
        if book in self.borrowed_books:
            self.borrowed_books.remove(book)
            book.is_available = True
            print(f"\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.name} –≤–µ—Ä–Ω—É–ª –∫–Ω–∏–≥—É '{book.title}'.")
        else:
            print(f"\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.name} –Ω–µ –≤–∑—è–ª –∫–Ω–∏–≥—É '{book.title}'.")